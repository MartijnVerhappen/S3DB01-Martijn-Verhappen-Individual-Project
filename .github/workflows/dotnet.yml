name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore "WebShopAPI/WebShopAPI.sln"

    - name: Build project
      run: dotnet build "WebShopAPI/WebShopAPI.sln" --no-restore

    - name: Install DotCover Tool
      run: |
        dotnet tool install --global JetBrains.dotCover.CommandLineTools --version 2024.3.0

    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Run SonarScanner Begin
      run: |
        dotnet-sonarscanner begin \
        /k:"MartijnVerhappen_S3DB01-Martijn-Verhappen-Individual-Project" \
        /o:"martijnverhappen" \
        /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
        /d:sonar.host.url="https://sonarcloud.io" \
        /d:sonar.branch.name="main"
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run tests and collect coverage
      run: dotnet test "WebShopAPI/unitTests/unitTests.csproj" --no-build --collect:"Code Coverage"

    - name: Upload Coverage Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage-report.xml

    - name: Run SonarScanner End
      run: |
        dotnet-sonarscanner end \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/web-shop-api:${{ github.sha }} ./WebShopAPI

    - name: Push Docker image to DockerHub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/web-shop-api:${{ github.sha }}
